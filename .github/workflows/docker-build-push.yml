name: Build and Push Kongloak Docker Images to GHCR

on:
  push:
    branches:
      - main
      - develop
      - staging
      - feature/client-roll-base-auth
  pull_request:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  KONG_IMAGE_NAME: ${{ github.repository }}/kong
  KEYCLOAK_IMAGE_NAME: ${{ github.repository }}/keycloak

jobs:
  build-and-push-kong:
    name: Build Kong Gateway Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Kong metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.KONG_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-,format=short,enable=${{ github.event_name != 'pull_request' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=staging,enable=${{ github.ref == 'refs/heads/staging' }}
          labels: |
            org.opencontainers.image.title=Kongloak Kong Gateway
            org.opencontainers.image.description=Kong Gateway with Token Manager V2 and Keycloak Integration
            org.opencontainers.image.vendor=tekinfopg

      - name: Build and push Kong Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deploy/Dockerfile.kong
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=kong
          cache-to: type=gha,mode=max,scope=kong
          build-args: |
            KONG_VERSION=3.9.0
            
      - name: Kong Image digest
        run: |
          echo "### 🦍 Kong Gateway Image Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  build-and-push-keycloak:
    name: Build Keycloak Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Keycloak metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.KEYCLOAK_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-,format=short,enable=${{ github.event_name != 'pull_request' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=staging,enable=${{ github.ref == 'refs/heads/staging' }}
          labels: |
            org.opencontainers.image.title=Kongloak Keycloak
            org.opencontainers.image.description=Keycloak with Custom Themes and Providers
            org.opencontainers.image.vendor=tekinfopg

      - name: Build and push Keycloak Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deploy/Dockerfile.keycloak
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=keycloak
          cache-to: type=gha,mode=max,scope=keycloak
          build-args: |
            KEYCLOAK_VERSION=26.2
            
      - name: Keycloak Image digest
        run: |
          echo "### 🔐 Keycloak Image Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [build-and-push-kong, build-and-push-keycloak]
    if: success()
    
    steps:
      - name: Success Summary
        run: |
          echo "## 🦍🔐 Kongloak Images Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All images have been built and pushed to GHCR." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pull Images:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.KONG_IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.KEYCLOAK_IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Watchtower will automatically update running containers with scope 'kongloak'." >> $GITHUB_STEP_SUMMARY
