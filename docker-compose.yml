x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-postgres}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: ${KONG_PG_HOST:-your-external-db-host}
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-your-db-password}
x-keycloak-config: &keycloak-env
  KC_HOSTNAME: ${KC_HOSTNAME}
  KC_HTTP_PORT: ${KC_HTTP_PORT:-8080}
  KC_HTTPS_PORT: ${KC_HTTPS_PORT:-8443}
  KC_HTTP_ENABLED: ${KC_HTTP_ENABLED:-false}
  KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS:-false}
  KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
  KC_DB: ${KC_DB:-postgres}
  KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
  KC_DB_URL: jdbc:postgresql://${KC_DB_URL:-keycloak-db}/${KC_POSTGRES_DB}
  KC_DB_USERNAME: ${KC_POSTGRES_USER}
  KC_DB_PASSWORD: ${KC_POSTGRES_PASSWORD}
  KC_HTTPS_CERTIFICATE_FILE: ${KC_HTTPS_CERTIFICATE_FILE}
  KC_HTTPS_CERTIFICATE_KEY_FILE: ${KC_HTTPS_CERTIFICATE_KEY_FILE}
  KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT:-true}
  KC_PROXY_HEADER: ${KC_PROXY_HEADER:-xforwarded}
  TZ: ${TZ:-Asia/Jakarta}
  WEBHOOK_URL : ${WEBHOOK_URL}
  PROXY_ADDRESS_FORWARDING: true
  # KC_PROXY_HEADERS: ${KC_PROXY_HEADERS:-xforwarded}
  
volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  konga_data: {}
  keycloak-datastore: {}
  redis-datastore: {}

networks:
  kong-net:
    driver: bridge
  proxy:
    name: proxy
    external: true

services:
  kong-migrations:
    profiles:
      - migration
    container_name: kong-migrations
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure:5

  kong-migrations-up:
    profiles:
      - migration  
    container_name: kong-migrations-up
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations up
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure:5
    depends_on:
      - kong-migrations

  kong:
    container_name: kong
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:${KONG_PROXY_LISTEN:-8000},0.0.0.0:${KONG_SSL_PROXY_LISTEN:-8443} ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:${KONG_ADMIN_LISTEN:-8001},0.0.0.0:${KONG_SSL_ADMIN_LISTEN:-8444} ssl"
      # KONG_ADMIN_GUI_LISTEN: "0.0.0.0:${KONG_ADMIN_GUI_LISTEN:-8002},0.0.0.0:${KONG_SSL_ADMIN_GUI_LISTEN:-8445} ssl"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
      KONG_ADMIN_GUI_SSL_CERT: "${CERT_FILE:-}"
      KONG_ADMIN_GUI_SSL_CERT_KEY: "${CERT_KEY_FILE:-}"
      KONG_ADMIN_SSL_CERT: "${CERT_FILE:-}"
      KONG_ADMIN_SSL_CERT_KEY: "${CERT_KEY_FILE:-}"
    networks:
      - kong-net
      - proxy
    ports:
      - ${KONG_PROXY_LISTEN:-8000}:${KONG_PROXY_LISTEN:-8000}
      # - ${KONG_ADMIN_LISTEN:-8001}:${KONG_ADMIN_LISTEN:-8001}
      # - ${KONG_ADMIN_GUI_LISTEN:-8002}:${KONG_ADMIN_GUI_LISTEN:-8002}
      - ${KONG_SSL_PROXY_LISTEN:-8443}:${KONG_SSL_PROXY_LISTEN:-8443}
      # - ${KONG_SSL_ADMIN_LISTEN:-8444}:${KONG_SSL_ADMIN_LISTEN:-8444}
      # - ${KONG_SSL_ADMIN_GUI_LISTEN:-8445}:${KONG_SSL_ADMIN_GUI_LISTEN:-8445}
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
      - ${KONG_CERT_DIR:-./certs}:/certs
    security_opt:
      - no-new-privileges
  konga:
    container_name: konga
    image: pantsel/konga
    environment:
      - NODE_ENV=development
    networks:
      - kong-net
      - proxy
    ports:
      - ${KONGA_LISTEN:-1337}:1337
    restart: on-failure
    volumes:
      - konga_data:/app/kongadata
    depends_on:
      - kong

  keycloak:
    image: keycloak/keycloak:latest
    command: start
    container_name: keycloak
    environment:
      <<: *keycloak-env
    ports:
      - ${KC_HTTPS_PORT}:${KC_HTTPS_PORT}
      - ${KC_HTTP_PORT}:${KC_HTTP_PORT}
    restart: always
    volumes:
      - ${KC_PROVIDER_DIR:-./keycloak-providers}:/opt/keycloak/providers/
      - ${KC_CERT_DIR:-./certs}:/certs
    depends_on:
      - kong
    networks:
      - kong-net
      - proxy
  kong-redis:
    image: redis:alpine3.21
    container_name: redis
    networks:
      - kong-net
    volumes:
      - redis-datastore:/data